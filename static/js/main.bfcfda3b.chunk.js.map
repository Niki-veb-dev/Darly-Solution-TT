{"version":3,"sources":["component/LoginPage/LoginPage.tsx","component/HomePage.tsx","component/LoginPage/LoginPageUi.tsx","component/NotFoundPage/NotFoundPage.tsx","App.tsx","index.tsx"],"names":["TypeForInput","TypeForButton","HomePage","className","to","LoginPageUi","data","hasCreate","hasEmailError","errorFromServer","hasPasswordError","isAuthentication","handleBlur","handleSubmit","handleChange","htmlFor","id","type","name","onBlur","onChange","value","email","placeholder","min","Number","password","slice","LOGIN","onClick","CREATE","LoginPage","useState","setData","navigate","useNavigate","setCreate","setEmailError","setErrorFromServer","setPasswordError","setAuthentication","clearData","validateEmail","url","test","validatePassword","length","validateInput","EMAIL","PASSWORD","Error","createUserAccount","a","firebase","auth","createUserWithEmailAndPassword","code","loginUserAccount","signInWithEmailAndPassword","event","preventDefault","currentTarget","useEffect","target","NotFoundPage","App","path","element","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bfcfda3b.chunk.js","sourcesContent":["import firebase from 'firebase/compat/app';\nimport 'firebase/compat/auth';\nimport 'firebase/compat/database';\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\n// eslint-disable-next-line import/no-cycle\nimport { LoginPageUi } from './LoginPageUi';\n\n// eslint-disable-next-line no-shadow\nexport enum TypeForInput {\n  EMAIL = 'email',\n  PASSWORD = 'password'\n}\n\n// eslint-disable-next-line no-shadow\nexport enum TypeForButton {\n  LOGIN = 'login',\n  CREATE = 'create',\n}\n\nexport const LoginPage: React.FC = () => {\n  const [data, setData] = useState<Data>({\n    email: '',\n    password: '',\n  });\n  const navigate = useNavigate();\n  const [hasCreate, setCreate] = useState<boolean>(false);\n  const [hasEmailError, setEmailError] = useState<boolean>(false);\n  const [errorFromServer, setErrorFromServer] = useState<string>('');\n  const [hasPasswordError, setPasswordError] = useState<boolean>(false);\n  const [isAuthentication, setAuthentication] = useState<boolean>(true);\n\n  const clearData = () => {\n    setData({\n      email: '',\n      password: '',\n    });\n  };\n\n  const validateEmail = (url: string) => {\n    const validateForm = /^([a-z0-9_-]+\\.)*[a-z0-9_-]+@[a-z0-9_-]+(\\.[a-z0-9_-]+)*\\.[a-z]{2,6}$/;\n\n    return validateForm.test(url);\n  };\n\n  const validatePassword = (length: number) => length >= 8;\n\n  const validateInput = (name: string, value: string) => {\n    switch (name) {\n      case TypeForInput.EMAIL:\n        setEmailError(!validateEmail(value));\n        break;\n      case TypeForInput.PASSWORD:\n        setPasswordError(!validatePassword(value.length));\n        break;\n\n      default:\n        throw new Error('unknown input type');\n    }\n  };\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = event.target;\n\n    validateInput(name, value);\n    setAuthentication(true);\n    setErrorFromServer('');\n    setCreate(false);\n    setData({\n      ...data,\n      [name]: value,\n    } as Data);\n  };\n\n  const handleBlur = (event: React.FocusEvent<HTMLInputElement>) => {\n    const { name, value } = event.target;\n\n    validateInput(name, value);\n  };\n\n  const createUserAccount = async (email: string, password: string) => {\n    try {\n      await firebase.auth().createUserWithEmailAndPassword(email, password);\n\n      setCreate(true);\n      clearData();\n    } catch (error: any) {\n      setAuthentication(false);\n      setErrorFromServer(error.code);\n    }\n  };\n\n  const loginUserAccount = async (email: string, password: string) => {\n    try {\n      await firebase.auth().signInWithEmailAndPassword(email, password);\n\n      navigate('/home');\n      clearData();\n    } catch (error: any) {\n      setErrorFromServer(error.code);\n      setAuthentication(false);\n    }\n  };\n\n  const handleSubmit = async (event: React.MouseEvent<HTMLButtonElement>) => {\n    event.preventDefault();\n    const { name } = event.currentTarget;\n    const { email, password } = data;\n\n    if (validateEmail(email) && validatePassword(password.length)) {\n      switch (name) {\n        case TypeForButton.CREATE:\n          createUserAccount(email, password);\n          break;\n\n        case TypeForButton.LOGIN:\n          loginUserAccount(email, password);\n          break;\n\n        default:\n          throw new Error('unknown button type');\n      }\n    } else {\n      validateInput(TypeForInput.EMAIL, email);\n      validateInput(TypeForInput.PASSWORD, password);\n    }\n  };\n\n  useEffect(() => {\n    return () => {\n      clearData();\n    };\n  }, []);\n\n  return (\n    <LoginPageUi\n      data={data}\n      hasCreate={hasCreate}\n      hasEmailError={hasEmailError}\n      errorFromServer={errorFromServer}\n      hasPasswordError={hasPasswordError}\n      isAuthentication={isAuthentication}\n      handleSubmit={handleSubmit}\n      handleChange={handleChange}\n      handleBlur={handleBlur}\n    />\n  );\n};\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nexport const HomePage: React.FC = () => {\n  return (\n    <div>\n      <div className=\"box\">\n        Hi, how are you ?\n      </div>\n      <Link to=\"/\" className=\"button is-succes\">\n        go back\n      </Link>\n    </div>\n  );\n};\n","import React from 'react';\n// eslint-disable-next-line import/no-cycle\nimport { TypeForButton } from './LoginPage';\n\ntype Props = {\n  data: Data\n  hasCreate: boolean,\n  hasEmailError: boolean,\n  errorFromServer: string,\n  hasPasswordError: boolean,\n  isAuthentication: boolean\n  handleBlur: (event: React.FocusEvent<HTMLInputElement>) => void\n  handleSubmit: (event: React.MouseEvent<HTMLButtonElement>) => void\n  handleChange: (event: React.ChangeEvent<HTMLInputElement>) => void\n};\n\nexport const LoginPageUi: React.FC<Props> = ({\n  data,\n  hasCreate,\n  hasEmailError,\n  errorFromServer,\n  hasPasswordError,\n  isAuthentication,\n  handleBlur,\n  handleSubmit,\n  handleChange,\n}) => {\n  return (\n    <div className=\"starter\">\n      <form className=\"box\">\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"email\">\n            Email\n            <div className=\"control\">\n              <input\n                id=\"email\"\n                type=\"email\"\n                name=\"email\"\n                className=\"input\"\n                onBlur={handleBlur}\n                onChange={handleChange}\n                value={data.email || ''}\n                placeholder=\"e.g. alex@example.com\"\n              />\n            </div>\n            {hasEmailError && <p className=\"error\">write your email address (example@mail.com)</p>}\n          </label>\n        </div>\n\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"password\">\n            Password\n            <div className=\"control\">\n              <input\n                id=\"password\"\n                min={Number(8)}\n                type=\"password\"\n                name=\"password\"\n                className=\"input\"\n                onBlur={handleBlur}\n                placeholder=\"********\"\n                onChange={handleChange}\n                value={data.password || ''}\n              />\n            </div>\n            {hasPasswordError && (\n              <p className=\"error\">\n                write your password\n                <br />\n                {' '}\n                (min length 8)\n              </p>\n            )}\n          </label>\n        </div>\n\n        {!isAuthentication && <div className=\"error\">{errorFromServer.slice(5)}</div>}\n        {hasCreate && (\n          <span className=\"icon-text has-text-success\">\n            <span className=\"icon\">\n              <i className=\"fas fa-check-square\"></i>\n            </span>\n            <div>Good work, account created, now log in</div>\n            <br />\n          </span>\n        )}\n\n        <div className=\"is-flex is-justify-content-space-between\">\n          <button\n            className=\"button is-primary\"\n            name={TypeForButton.LOGIN}\n            onClick={handleSubmit}\n            type=\"submit\"\n          >\n            Login\n          </button>\n          <button\n            className=\"button is-primary\"\n            name={TypeForButton.CREATE}\n            onClick={handleSubmit}\n            type=\"submit\"\n          >\n            Create account\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n};\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nexport const NotFoundPage: React.FC = () => (\n  <div>\n    <div className=\"block\">Page not found</div>\n    <Link to=\"/\" className=\"button is-succes\">\n      go back\n    </Link>\n  </div>\n);\n","/* eslint-disable react/react-in-jsx-scope */\nimport {\n  Route,\n  Routes,\n} from 'react-router-dom';\nimport './App.scss';\nimport { HomePage } from './component/HomePage';\nimport { LoginPage } from './component/LoginPage';\nimport { NotFoundPage } from './component/NotFoundPage';\n\nexport const App: React.FC = () => {\n  return (\n    <div className=\"starter\">\n      <Routes>\n        <Route path=\"/\" element={<LoginPage />} />\n        <Route path=\"/home\" element={<HomePage />} />\n        <Route path=\"*\" element={<NotFoundPage />} />\n      </Routes>\n    </div>\n  );\n};\n","import firebase from 'firebase/compat/app';\nimport React from 'react';\nimport { BrowserRouter } from 'react-router-dom';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport { App } from './App';\n\nconst firebaseConfig = {\n  apiKey: 'AIzaSyB3ztw78QbRqpAbw7CRO00Z-Mh5QPa9_-4',\n  authDomain: 'fir-test-project-8bd3a.firebaseapp.com',\n  databaseURL: 'https://fir-test-project-8bd3a-default-rtdb.europe-west1.firebasedatabase.app',\n  projectId: 'fir-test-project-8bd3a',\n  storageBucket: 'fir-test-project-8bd3a.appspot.com',\n  messagingSenderId: '400610114990',\n  appId: '1:400610114990:web:a8f1d61f4a538229715c3f',\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}